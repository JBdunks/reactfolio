{"version":3,"sources":["components/nav/nav.js","projects.js","components/project/project.js","components/main/main.js","components/footer/footer.js","components/about/about.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","links","color","textDecoration","Nav","classes","className","AppBar","position","Toolbar","Typography","variant","to","IconButton","href","target","fontSize","id","name","image","description","git","deployed","console","log","data","media","height","bottom","justifyContent","background","Project","Card","key","CardActionArea","CardMedia","CardContent","gutterBottom","component","CardActions","size","Main","Grid","container","projectList","map","project","item","xs","sm","md","projectCard","text","padding","paper","paddingBottom","appBar","top","Footer","Fragment","CssBaseline","maxWidth","paddingTop","avatar","backgroundImage","box","marginTop","marginBottom","About","CardHeader","Avatar","subheader","disableSpacing","App","direction","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2103d360.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  links: {\n    color: \"white\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function Nav() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link className={classes.links} to=\"/\">\n              Jon Butler /{\" \"}\n            </Link>\n            <Link className={classes.links} to=\"/projects\">\n              Projects\n            </Link>\n          </Typography>\n\n          <IconButton>\n            <a href=\"https://github.com/JBdunks\" target=\"_blank\">\n              <AssignmentIcon fontSize=\"large\" className={classes.links} />\n            </a>\n          </IconButton>\n          <IconButton>\n            <a href=\"https://github.com/JBdunks\" target=\"_blank\">\n              <GitHubIcon fontSize=\"large\" className={classes.links} />\n            </a>\n          </IconButton>\n          <IconButton>\n            <a href=\"https://www.linkedin.com/in/jwb80jobs\" target=\"_blank\">\n              <LinkedInIcon fontSize=\"large\" className={classes.links} />\n            </a>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","export default [\n  {\n    id: \"1\",\n    name: \"unBoxed\",\n    image:\n      \"https://github.com/JBdunks/unBoxed/blob/master/public/assets/images/unBoxedMain.PNG?raw=true\",\n    description: \"Project Description\",\n    git: \"https://github.com/JBdunks/unBoxed\",\n    deployed: \"https://unboxedgaming.herokuapp.com/\",\n  },\n  {\n    id: \"2\",\n    name: \"R-M-D\",\n    image:\n      \"https://github.com/JBdunks/r-m-dir/blob/master/public/rmd.png?raw=true\",\n    description: \"Project Description\",\n    git: \"https://github.com/JBdunks/r-m-dir\",\n    deployed: \"https://jbdunks.github.io/r-m-dir/\",\n  },\n  {\n    id: \"3\",\n    name: \"Burger Time\",\n    image:\n      \"https://raw.githubusercontent.com/JBdunks/burger/master/burger_screen.png\",\n    description: \"Project Description\",\n    git: \"https://github.com/JBdunks/burger\",\n    deployed: \"https://bobs-burger-time.herokuapp.com/\",\n  },\n  {\n    id: \"4\",\n    name: \"Food Finder\",\n    image:\n      \"https://github.com/JBdunks/FoodFinder/blob/master/foodfinder1.png?raw=true\",\n    description: \"Project Description\",\n    git: \"https://github.com/JBdunks/FoodFinder\",\n    deployed: \"https://jbdunks.github.io/FoodFinder/\",\n  },\n  {\n    id: \"5\",\n    name: \"Weather App\",\n    image:\n      \"https://github.com/JBdunks/weather/blob/master/weather_pic.png?raw=true\",\n    description: \"Project Description\",\n    git: \"https://github.com/JBdunks/weather\",\n    deployed: \"https://jbdunks.github.io/weather/\",\n  },\n];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport data from \"../../projects.js\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconsole.log(data);\n\nconst useStyles = makeStyles({\n  media: {\n    height: 180,\n  },\n  bottom: {\n    justifyContent: \"space-around\",\n    background: \"#3F51B5\",\n  },\n  links: {\n    color: \"white\",\n  },\n});\n\nconst Project = ({ id, name, image, description, git, deployed }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Card className={classes.root} key={id}>\n        <CardActionArea>\n          <CardMedia className={classes.media} image={image} title={name} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions className={classes.bottom}>\n          <IconButton size=\"medium\">\n            <a href={git} target=\"_blank\">\n              <GitHubIcon fontSize=\"large\" className={classes.links} />\n            </a>\n          </IconButton>\n          <IconButton size=\"medium\">\n            <a href={deployed} target=\"_blank\">\n              <PublicIcon fontSize=\"large\" className={classes.links} />\n            </a>\n          </IconButton>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport projectList from \"../../projects.js\";\nimport Project from \"../project/project\";\n\nconst Main = () => {\n  const projectCard = (project) => {\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Project {...project} />\n      </Grid>\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      {projectList.map((project) => projectCard(project))}\n    </Grid>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  links: {\n    color: \"white\",\n    textDecoration: \"none\",\n  },\n\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n    position: \"static\",\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <AppBar color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography>\n            Made With{\" \"}\n            <a\n              className={classes.links}\n              href=\"https://material-ui.com/\"\n              target=\"_blank\"\n            >\n              Material-ui\n            </a>{\" \"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Grid } from \"@material-ui/core\";\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: \"340px\",\n    paddingTop: \"56.25%\", // 16:9\n  },\n\n  avatar: {\n    backgroundImage: \"linear-gradient(to top, #209cff 0%, #68e0cf 100%)\",\n  },\n  box: {\n    marginTop: \"10%\",\n    marginBottom: \"10%\",\n  },\n  bottom: {\n    justifyContent: \"space-around\",\n    background: \"#3F51B5\",\n  },\n  links: {\n    color: \"white\",\n  },\n}));\n\nexport default function About() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.box}>\n      <Card item xs={12} sm={8} md={8}>\n        <Card className={classes.root}>\n          <CardHeader\n            avatar={<Avatar className={classes.avatar}>JB</Avatar>}\n            title=\"Jon Butler\"\n            subheader=\"Junior Software Developer\"\n          />\n          <CardMedia\n            className={classes.media}\n            image={\n              \"https://avatars3.githubusercontent.com/u/48998870?s=460&u=240368a16bdb4e18dff75824ff5d6128180fd8c6&v=4\"\n            }\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Jon Butler\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing className={classes.bottom}>\n            <IconButton className={classes.links}>\n              Phone <PhoneIphoneIcon />\n            </IconButton>\n            <IconButton className={classes.links}>\n              Email <MailOutlineIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      </Card>\n      <br />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Nav from \"./components/nav/nav\";\nimport Main from \"./components/main/main\";\nimport Footer from \"./components/footer/footer\";\nimport { Grid } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/about/about\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Nav />\n            <br />\n          </Grid>\n          <Grid item container>\n            <Grid item xs={false} sm={2} />\n            <Grid item xs={12} sm={8}>\n              <Switch>\n                <Route path=\"/projects\" exact component={Main} />\n                <Route path=\"/\" exact component={About} />\n              </Switch>\n            </Grid>\n            <Grid item xs={false} sm={2} />\n          </Grid>\n          <br />\n          <Footer />\n        </Grid>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n{\n  /* <Switch>\n                <Route path=\"/projects\" exact component={Main} />\n                <Route path=\"/\" exact component={About} />\n              </Switch> */\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}